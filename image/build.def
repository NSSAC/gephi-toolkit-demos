Bootstrap: docker
From: ubuntu:21.04

%setup
mkdir -p $SINGULARITY_ROOTFS/input
mkdir -p $SINGULARITY_ROOTFS/src

%files
generated_config.json /sciduct/config.json
../igraph /

%post
apt update
export DEBIAN_FRONTEND=noninteractive
apt-get install dialog
apt install -y python3-pip
apt install -y jq
apt install -y python3-cairo
apt install -y pkg-config
ln -s /usr/bin/python3 /usr/bin/python

pip install python-igraph
pip install numpy
#pip install pycairo

%apprun sciduct
	cat /sciduct/config.json

%apprun generate_graph_visualization
	python3 /igraph/plot_graph.py $@

%apprun generate_graph_visualization_sciduct 
        ALGO=`cat /job/job.json | jq -r .input.layout_algorithm`
	CONTRACT=`cat /job/job.json | jq -r .input.contract`
	CLUSTER=`cat /job/job.json | jq -r .input.cluster`
	COLOR=`cat /job/job.json | jq -r .input.color`
	WIDTH=`cat /job/job.json | jq -r .input.output_width`
	HEIGHT=`cat /job/job.json | jq -r .input.output_height`
	SCALE=`cat /job/job.json | jq -r .input.scale`
	DROP_ISOLATES=`cat /job/job.json | jq -r .input.drop_isolates`
	OUTPUT_TYPE=`cat /job/job.json | jq -r .input.output_type`

	echo "CONTRACT: $CONTRACT"
	echo "DROP_ISOLATES: $DROP_ISOLATES"

        if [ "$CONTRACT" = "true" ]; then
                CONTRACT="--contract "
        else
                CONTRACT=""
        fi

        if [ "$DROP_ISOLATES" = "true" ]; then
                DROP_ISOLATES="--drop_isolates "
        else
                DROP_ISOLATES=""
        fi

	case $ALGO in
		"Circular")
			LAYOUT_ALGO="circle"
			;;
		"Distributed Recursive")
			LAYOUT_ALGO="drl"
			;;
		"Fruchterman-Reingold Force-directed")
			LAYOUT_ALGO="fr"
			;;
		"Fruchterman-Reingold Force-directed 3D")
			LAYOUT_ALGO="fr3d"
			;;
		"Fruchterman-Reingold Forced-directed Large Graphs")
			LAYOUT_ALGO="grid_fr"
			;;
		"Kamada-Kawai Force-directed")
			LAYOUT_ALGO="kk"
			;;
		"Kamada-Kawai Force-directed 3D")
			LAYOUT_ALGO="kk3d"
			;;
		"Large Graph")
			LAYOUT_ALGO="lgl"
			;;
		"Random")
			LAYOUT_ALGO="random"
			;;
		"Random 3D")
			LAYOUT_ALGO="random_3d"
			;;
		"Reingold-Tilford Tree")
			LAYOUT_ALGO="rt"
			;;
		"Reingold-Tilford Tree Circular")
			LAYOUT_ALGO="rt_circular"
			;;
		"Spherical")			
			LAYOUT_ALGO="spherical"
			;;
		*)
			LAYOUT_ALGO="auto"
			;;
	esac
	echo "Stripping commented lines from input file."
	cat /input/graph | grep -v "^#" > /input/graph.edgelist
        # Call the plotter
	echo "Begin plotting"
	CMDARGS="--input_path /input/graph.edgelist --output_path /output/output.$OUTPUT_TYPE --layout_algorithm $LAYOUT_ALGO $CONTRACT --cluster $CLUSTER  --color $COLOR --output_width $WIDTH --output_height $HEIGHT --scale $SCALE $DROP_ISOLATES"
	echo "Arguments: $CMDARGS"
        /scif/apps/generate_graph_visualization/scif/runscript $CMDARGS && mv /output/output.$OUTPUT_TYPE /output/output.plot && echo "Plotting Complete"
	echo "Plotting complete"	
